// H√†m b·∫•t ƒë·ªìng b·ªô ƒë·ªÉ fetch danh s√°ch t√†i kho·∫£n t·ª´ mock API
 const fetchUsers = async () => {
    try {
        const API_KEY = "67fe688cc590d6933cc1248f";
        const BASE_URL = `https://mindx-mockup-server.vercel.app/api/resources/dataUsers`;
        // G·ªçi API b·∫±ng ph∆∞∆°ng th·ª©c GET ƒë·∫øn endpoint mock v·ªõi API key
        const response = await fetch(
            `${BASE_URL}?apiKey=${API_KEY}`
        );


        // N·∫øu ph·∫£n h·ªìi kh√¥ng th√†nh c√¥ng (status kh√°c 200-299), n√©m l·ªói
        if (!response.ok) throw new Error("Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu");


        // Parse ph·∫£n h·ªìi JSON th√†nh JavaScript object
        const result = await response.json();


        // In k·∫øt qu·∫£ th√¥ t·ª´ API ra console ƒë·ªÉ debug
        console.log("üêû Raw result from API:", result);
        const customers = result?.data?.data;


        // Tr·∫£ v·ªÅ m·∫£ng d·ªØ li·ªáu ng∆∞·ªùi d√πng n·∫±m trong result.data.data
        // Do mock API l·ªìng d·ªØ li·ªáu nh∆∞: { data: { data: [...] } }
        // N·∫øu l√† m·∫£ng th√¨ tr·∫£ v·ªÅ, n·∫øu kh√¥ng th√¨ tr·∫£ v·ªÅ m·∫£ng r·ªóng ƒë·ªÉ tr√°nh l·ªói
        return Array.isArray(customers) ? customers : [];
    } catch (error) {
        // B·∫Øt l·ªói n·∫øu g·ªçi API ho·∫∑c parse JSON th·∫•t b·∫°i
        console.error("L·ªói khi g·ªçi API:", error);


        // Tr·∫£ v·ªÅ m·∫£ng r·ªóng ƒë·ªÉ tr√°nh ·ª©ng d·ª•ng b·ªã crash
        return [];
    }
};
export default fetchUsers
